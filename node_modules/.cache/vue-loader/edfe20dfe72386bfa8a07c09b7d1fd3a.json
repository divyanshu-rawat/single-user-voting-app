{"remainingRequest":"/Users/divyanshurawat/Desktop/hello-divyanshu/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/divyanshurawat/Desktop/hello-divyanshu/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/divyanshurawat/Desktop/hello-divyanshu/src/App.vue","mtime":1536364192760},{"path":"/Users/divyanshurawat/Desktop/hello-divyanshu/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/usr/local/lib/node_modules/@vue/cli-service-global/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/divyanshurawat/Desktop/hello-divyanshu/node_modules/cache-loader/dist/cjs.js","mtime":1536268791821},{"path":"/Users/divyanshurawat/Desktop/hello-divyanshu/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n* { color: inherit; }\n\n:root {\n  font: 1rem/1.175 \"BlinkMacSystemFont\", -apple-system, \"Roboto\", sans-seri;\n}\n\n\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n#margin{\n  margin-top: 5px;\n}\n\n\ninput { text-align: center; }\n\nimg {\n  width: 8rem; height: 8rem;\n  vertical-align: calc(-0.12109375em);\n}\n\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwGA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA","file":"App.vue","sourceRoot":".","sourcesContent":["<template>\n  <div id=\"app\">\n    <img alt=\"Vue logo\" src=\"./assets/wow.png\">\n    <HelloWorld msg=\"Welcome to the Voting Application\"/>\n    <div>\n      <ul>\n        <li v-for=\"(framework, index) in frameworks\" :key='index' >\n\n        {{framework.name}} has - {{framework.votes}} votes\n\n        <button v-on:click = \"voteFor(framework)\">UpVote</button>\n        <button v-on:click = \"remove(framework)\" v-if = \"editMode\">Delete</button>\n\n      </li>\n      </ul>\n\n      <button v-on:click = \"toggleEditMode\" >{{editMode ? 'Done' : 'Edit' }}</button>\n      \n      <div class=\"margin\">\n        <input v-if=\"editMode\" placeholder=\"Add new Framework\" v-on:keyup.enter=\"addNew\">\n      </div>\n\n      <p class=\"margin\">Current Winner(s): {{winnerString}}</p>\n\n    </div>\n\n  </div>\n\n</template>\n\n<script>\nimport HelloWorld from './components/HelloWorld.vue'\n\n\nexport default {\n  name: 'app',\n  components: {\n    HelloWorld\n  },\n  data(){\n    return {\n      name : 'divyanshu',\n      editMode: false,\n      frameworks: [\n        { name: 'Vue.js', votes: 0 },\n        { name: 'React', votes: 0 },\n        { name: 'Angular', votes: 0 }\n    ]\n    }\n  },\n  methods: {\n       voteFor: function(f) {\n          f.votes += 1;\n          this.computecurrentWinner()\n        },\n        addNew: function (e) {\n          this.frameworks.push(\n            {name: e.target.value, votes: 0}\n          )\n          e.target.value = '';\n          this.save();\n        },\n        remove: function (f) {\n          this.frameworks = this.frameworks.filter( x => x != f)\n          this.save();\n        },\n        load: function() {\n\n           let data = localStorage.getItem('saved');\n            if (data) {\n              this.frameworks = JSON.parse(data)\n            }\n          },\n         save: function() {\n            let data = JSON.stringify(this.frameworks)\n            localStorage.setItem('saved', data)\n          },\n\n         toggleEditMode: function() {\n            this.editMode = !this.editMode\n          }\n    },\n      computed: {\n        winnerString: function() {\n          let scores = this.frameworks.map(f => f.votes)\n          let highscore = Math.max.apply(Math, scores)\n          let bestList = this.frameworks.filter(f => f.votes == highscore)\n\n          let bestNames = bestList.map(f => f.name)\n          return bestNames.join(', ')\n        }\n      },\n\n     created: function() {\n       this.load();\n    }\n}\n\n\n\n</script>\n\n<style>\n\n* { color: inherit; }\n\n:root {\n  font: 1rem/1.175 \"BlinkMacSystemFont\", -apple-system, \"Roboto\", sans-seri;\n}\n\n\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n#margin{\n  margin-top: 5px;\n}\n\n\ninput { text-align: center; }\n\nimg {\n  width: 8rem; height: 8rem;\n  vertical-align: calc(-0.12109375em);\n}\n\n</style>\n"]}]}